name: Monorepo CI

on: [push]

jobs:
  build_test_deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install dependencies (python)
        working-directory: ./my_python_service
        run: |
          python -m venv venv
          source venv/bin/activate
          pip install -r requirements.txt

      - name: Run tests (python)
        working-directory: ./my_python_service
        run: |
          source venv/bin/activate
          pytest src/test_main.py

      - name: Create zip file for AWS Lambda (python)
        working-directory: ./my_python_service/src
        run: |
          mkdir -p ../../build
          zip -r ../../build/my-python-service.zip *

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'

      - name: Install dependencies (ts)
        working-directory: ./my_ts_service
        run: npm install

      - name: Create build (ts)
        working-directory: ./my_ts_service
        run: |
          npm run build

      - name: Create zip file for AWS Lambda (ts)
        working-directory: ./my_ts_service/dist
        run: |
          mkdir -p ../../build
          zip -r ../../build/my-ts-service.zip ./*

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-central-1

      - name: Install Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_wrapper: false

      - name: Deploy (terraform)
        working-directory: ./terraform
        run: |
          terraform init
          terraform apply --auto-approve
